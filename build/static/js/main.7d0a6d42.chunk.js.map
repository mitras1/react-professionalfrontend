{"version":3,"sources":["action-types/customer-action-types.ts","action-types/signin-action-types.ts","reducers/customer-reducers.ts","reducers/signin-reducers.ts","reducers/combined-reducers.ts","store/app-store.ts","components/breadcrumb/breadcrumb-component.tsx","components/vacancies/vacancies-component.tsx","components/aboutus/aboutus-component.tsx","components/contactaddress/contactaddress-component.tsx","components/contactmap/contactmap-component.tsx","components/contactus/contactus-component.tsx","action-creators/signin-action-creators.ts","services/authentication-token-service.ts","models/customer-profile.ts","models/user-profile.ts","services/token-parser-service.ts","services/authentication-service.ts","services/browser-history-service.ts","action-creators/customer-action-creators.ts","utilities/customer-map.ts","services/customer-service.ts","services/push-notification-service.ts","components/customer-detail-viewer/customer-detail-viewer-component.tsx","components/customer-viewer/customer-viewer-component.tsx","components/search-panel/search-panel-component.tsx","components/crmsystem/crmsystem-component.tsx","components/contact/contact-component.tsx","components/copyright/copyright-component.tsx","components/followme/followme-component.tsx","components/summary/summary-component.tsx","components/footer/footer-component.tsx","components/navigation/navigation-component.tsx","components/header/header-component.tsx","components/faq/faq-component.tsx","components/reasons/reasons-component.tsx","components/social/social-component.tsx","components/home/home-component.tsx","hooks/use-collect-form-validate.ts","components/register-customer/customer-registration-form-component.tsx","components/signin/signin-component.tsx","components/layout/layout-component.tsx","components/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["CustomerActionTypes","SigninActionTypes","customerReducers","fillCustomersReducer","state","action","nextState","type","FillCustomers","customers","isLoadingReducer","IsLoading","undefined","isLoading","errorOccurredReducer","ErrorOccurred","errorOccurred","errorText","EMPTY_USER_PROFILE","userProfileId","email","title","department","DEFAULT_ERROR_OCCURRED","errorStatus","signinReducers","userProfileReducer","AuthenticationSuccessful","userProfile","authenticationStatusReducer","authenticationStatus","authenticationErrorOccurredReducer","AuthenticationFailed","authenticationError","combinedReducers","combineReducers","fillCustomers","authenticationErrorOccurred","appStore","createStore","applyMiddleware","thunk","Breadcrumb","properties","className","to","activeLink","Vacancies","href","Aboutus","id","src","alt","width","ContactAddress","ContactMap","ContactUs","placeholder","rows","value","DEFAULT_USER_PROFILE","SigninActionCreators","createAuthenticationSuccessful","createAuthenticationFailed","AUTH_TOKEN","AuthenticationTokenService","setAuthToken","token","Error","window","localStorage","setItem","getAuthToken","getItem","removeAuthToken","removeItem","CustomerProfile","customerId","customerName","address","phoneNumber","customerType","creditLimit","activeStatus","remarks","photoUrl","UserProfile","TokenParserService","parse","payload","split","decodedPayload","JSON","atob","AuthenticationService","authenticate","password","callback","dispatch","requestOptions","method","headers","body","stringify","fetch","process","then","response","ok","statusText","json","catch","error","finally","BrowserHistoryService","route","history","pushState","CustomerActionCreators","createFillCustomers","createIsLoading","loadingStatus","createErrorOccurred","PHOTOS_FOLDER","REACT_APP_PHOTOS_FOLDER","CustomerMap","transform","customer","INVALID_CUSTOMER_ARGUMENTS","customerProfile","a","validation","status","parsedJson","CustomerService","getCustomers","mappedCustomers","map","saveCustomerRecord","pushNotificationService","socketClient","registeredCallbacks","this","io","connect","Map","eventName","isEventExist","has","callbacks","get","Set","add","set","on","forEach","notificationCallback","delete","CustomerDetailViewer","props","tabIndex","role","aria-labelledby","data-dismiss","aria-label","aria-hidden","CustomerViewer","name","length","substr","data-target","data-toggle","SearchPanel","useState","searchString","setSearchString","onChange","e","target","handleSearch","handleEvent","aria-describedby","REDIRECT_TO_HOME_FOR_INVALID_TOKEN","CrmSystem","register","existingCustomers","setState","errorTitle","filteredCustomers","filter","indexOf","customersMarkup","isCustomersDataAvailable","customerRecord","filterCustomers","React","Component","ConnectedCrmSystem","Contact","Copyright","rel","Followme","Summary","Footer","ConnectedNavigation","isAuthenticated","style","color","Header","Faq","Reasons","Social","Home","useCollectFormDataAndValidate","initialValues","inputs","setInputs","handleSubmit","event","preventDefault","validationStatus","obj","propertyIndex","propertyValue","validateInputs","handleChange","persist","propertyName","DEFAULT_CUSTOMER_PROFILE","Math","floor","random","CustomerRegistrationForm","setStatus","message","setMessage","useHistory","setTimeout","push","onSubmit","htmlFor","readOnly","checked","remakrs","DEFAULT_SIGNIN_DATA","ConnectedSignin","setFormStatus","Layout","path","exact","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d0a6d42.chunk.js","sourcesContent":["enum CustomerActionTypes {\r\n    FillCustomers = 'FillCustomers',\r\n    IsLoading = 'IsLoading',\r\n    ErrorOccurred = 'ErrorOccurred'\r\n}\r\n\r\nexport default CustomerActionTypes;\r\n","enum SigninActionTypes {\r\n    AuthenticationSuccessful = \"AuthenticationSuccessful\",\r\n    AuthenticationFailed = \"AuthenticationFailed\"\r\n}\r\n\r\nexport default SigninActionTypes;\r\n","import { CustomerActionTypes } from \"../action-types\";\r\nimport { CustomerAction } from \"../actions\";\r\nimport { CustomerProfile } from \"../models\";\r\n\r\nconst customerReducers = {\r\n    fillCustomersReducer: (state: CustomerProfile[] = [], action: CustomerAction) => {\r\n        let nextState = state;\r\n\r\n        if (action.type === CustomerActionTypes.FillCustomers) {\r\n            if (action.customers) {\r\n                nextState = [...action.customers];\r\n            }\r\n        }\r\n\r\n        return nextState;\r\n    },\r\n    isLoadingReducer: (state: boolean = false, action: CustomerAction) => {\r\n        let nextState = state;\r\n\r\n        if (action.type === CustomerActionTypes.IsLoading) {\r\n            if (action.isLoading !== undefined) {\r\n                nextState = action.isLoading;\r\n            }\r\n        }\r\n\r\n        return nextState;\r\n    },\r\n    errorOccurredReducer: (state: { errorText?: string } = {}, action: CustomerAction) => {\r\n        let nextState = state;\r\n\r\n        if (action.type === CustomerActionTypes.ErrorOccurred) {\r\n            if (action.errorOccurred !== undefined) {\r\n                nextState = {\r\n                    errorText: action.errorOccurred.errorText\r\n                };\r\n            }\r\n        }\r\n\r\n        return nextState;\r\n    }\r\n};\r\n\r\nexport default customerReducers;\r\n","import { SigninActionTypes } from \"../action-types\";\r\nimport SigninAction from \"../actions/signin-action\";\r\nimport { UserProfile } from \"../models\";\r\n\r\nconst EMPTY_USER_PROFILE: UserProfile = {\r\n    userProfileId: \"\",\r\n    email: \"\",\r\n    title: \"\",\r\n    department: \"\"\r\n};\r\n\r\nconst DEFAULT_ERROR_OCCURRED = {\r\n    errorStatus: true,\r\n    errorText: \"\"\r\n};\r\n\r\nconst signinReducers = {\r\n    userProfileReducer: (state: UserProfile = EMPTY_USER_PROFILE, action: SigninAction) => {\r\n        let nextState = state;\r\n\r\n        if (action.type !== undefined &&\r\n            action.type === SigninActionTypes.AuthenticationSuccessful) {\r\n            if (action.userProfile) {\r\n                nextState = action.userProfile;\r\n            }\r\n        }\r\n\r\n        return nextState;\r\n    },\r\n    authenticationStatusReducer: (state: boolean = false, action: SigninAction) => {\r\n        let nextState = state;\r\n\r\n        if (action.type !== undefined &&\r\n            action.type === SigninActionTypes.AuthenticationSuccessful) {\r\n            if (action.authenticationStatus !== undefined) {\r\n                nextState = action.authenticationStatus;\r\n            }\r\n        }\r\n\r\n        return nextState;\r\n    },\r\n    authenticationErrorOccurredReducer: (state: {\r\n        errorStatus?: boolean, errorText?: string\r\n    } = DEFAULT_ERROR_OCCURRED, action: SigninAction) => {\r\n        let nextState = state;\r\n\r\n        if (action.type !== undefined &&\r\n            action.type === SigninActionTypes.AuthenticationFailed) {\r\n            if (action.authenticationError !== undefined) {\r\n                nextState = action.authenticationError;\r\n            }\r\n        }\r\n\r\n        return nextState;\r\n    }\r\n};\r\n\r\nexport default signinReducers;\r\n","import { combineReducers } from \"redux\";\r\nimport customerReducers from \"./customer-reducers\";\r\nimport signinReducers from \"./signin-reducers\";\r\n\r\nconst combinedReducers = combineReducers({\r\n    fillCustomers: customerReducers.fillCustomersReducer,\r\n    isLoading: customerReducers.isLoadingReducer,\r\n    errorOccurred: customerReducers.errorOccurredReducer,\r\n    userProfile: signinReducers.userProfileReducer,\r\n    authenticationStatus: signinReducers.authenticationStatusReducer,\r\n    authenticationErrorOccurred: signinReducers.authenticationErrorOccurredReducer\r\n});\r\n\r\nexport default combinedReducers;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { combinedReducers } from \"../reducers\";\r\n\r\nconst preloadedState = {};\r\nconst appStore = createStore(\r\n    combinedReducers,\r\n    preloadedState,\r\n    applyMiddleware(thunk));\r\n\r\nexport default appStore;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport BreadcrumbProps from './breadcrumb-props';\r\n\r\nconst Breadcrumb: React.FC<BreadcrumbProps> = properties => {\r\n    return (\r\n        <ol className=\"breadcrumb\">\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"active\">\r\n                {properties.activeLink || \"\"}\r\n            </li>\r\n        </ol>\r\n    );\r\n};\r\n\r\nexport default Breadcrumb;","const Vacancies = () => {\r\n    return (\r\n        <aside className=\"col-sm-4 sidebar sidebar-right\">\r\n            <div className=\"widget\">\r\n                <h4>Vacancies</h4>\r\n                <ul className=\"list-unstyled list-spaces\">\r\n                    <li><a href=\"/\">Lorem ipsum dolor</a><br /><span className=\"small text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Animi, laborum.</span></li>\r\n                    <li><a href=\"/\">Totam, libero, quis</a><br /><span className=\"small text-muted\">Suscipit veniam debitis sed ipsam quia magnam eveniet perferendis nisi.</span></li>\r\n                    <li><a href=\"/\">Enim, sequi dignissimos</a><br /><span className=\"small text-muted\">Reprehenderit illum quod unde quo vero ab inventore alias veritatis.</span></li>\r\n                    <li><a href=\"/\">Suscipit, consequatur, aut</a><br /><span className=\"small text-muted\">Sed, mollitia earum debitis est itaque esse reiciendis amet cupiditate.</span></li>\r\n                    <li><a href=\"/\">Nam, illo, veritatis</a><br /><span className=\"small text-muted\">Delectus, sapiente illo provident quo aliquam nihil beatae dignissimos itaque.</span></li>\r\n                </ul>\r\n            </div>\r\n\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default Vacancies;\r\n","import { Breadcrumb } from \"../breadcrumb\";\r\nimport { Vacancies } from \"../vacancies\";\r\n\r\nconst Aboutus = () => {\r\n    return (\r\n        <>\r\n            <header id=\"head\" className=\"secondary\"></header>\r\n\r\n            <div className=\"container\">\r\n                \r\n                <Breadcrumb activeLink=\"About\" />\r\n\r\n                <div className=\"row\">\r\n                    <article className=\"col-sm-8 maincontent\">\r\n                        <header className=\"page-header\">\r\n                            <h1 className=\"page-title\">About us</h1>\r\n                        </header>\r\n\r\n                        <h3>Lorem ipsum</h3>\r\n\r\n                        <p><img src=\"assets/images/mac.jpg\" alt=\"\" className=\"img-rounded pull-right\" width=\"300\" /> Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eveniet, consequuntur eius repellendus eos aliquid molestiae ea laborum ex quibusdam laudantium voluptates placeat consectetur quam aliquam beatae soluta accusantium iusto nihil nesciunt unde veniam magnam repudiandae sapiente.</p>\r\n                        <p>Quos, aliquam nam velit impedit minus tenetur beatae voluptas facere sint pariatur! Voluptatibus, quisquam, error, est assumenda corporis inventore illo nesciunt iure aut dolor possimus repellat minima veniam alias eius!</p>\r\n                        <h3>Necessitatibus</h3>\r\n                        <p>Velit, odit, eius, libero unde impedit quaerat dolorem assumenda alias consequuntur optio quae maiores ratione tempore sit aliquid architecto eligendi pariatur ab soluta doloremque dicta aspernatur labore quibusdam dolore corrupti quod inventore. Maiores, repellat, consequuntur eius repellendus eos aliquid molestiae ea laborum ex quibusdam laudantium voluptates placeat consectetur quam aliquam!</p>\r\n                        <h3>Fugit, laboriosam</h3>\r\n                        <p>Eum, quasi, est, vitae, ipsam nobis consectetur ea aspernatur ad eos voluptatibus fugiat nisi perferendis impedit. Quam, nulla, excepturi, voluptate minus illo tenetur sint ab in culpa cumque impedit quibusdam. Saepe, molestias quia voluptatem natus velit fugiat omnis rem eos sapiente quasi quaerat aspernatur quisquam deleniti accusantium laboriosam odio id?</p>\r\n                        <h3>Doloribus, illo ipsum</h3>\r\n                        <p>Velit, odit, eius, libero unde impedit quaerat dolorem assumenda alias consequuntur optio quae maiores ratione tempore sit aliquid architecto eligendi pariatur ab soluta doloremque dicta aspernatur labore quibusdam dolore corrupti quod inventore. Maiores, repellat, consequuntur eius repellendus eos aliquid molestiae ea laborum ex quibusdam laudantium voluptates placeat consectetur quam aliquam!</p>\r\n                        <p>Eum, quasi, est, vitae, ipsam nobis consectetur ea aspernatur ad eos voluptatibus fugiat nisi perferendis impedit. Quam, nulla, excepturi, voluptate minus illo tenetur sint ab in culpa cumque impedit quibusdam. Saepe, molestias quia voluptatem natus velit fugiat omnis rem eos sapiente quasi quaerat aspernatur quisquam deleniti accusantium laboriosam odio id?</p>\r\n                    </article>\r\n\r\n                    <Vacancies />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Aboutus;","const ContactAddress = () => {\r\n    return (\r\n        <aside className=\"col-sm-3 sidebar sidebar-right\">\r\n\r\n            <div className=\"widget\">\r\n                <h4>Address</h4>\r\n                <address>\r\n                    2002 Holcombe Boulevard, Houston, TX 77030, USA\r\n\t\t\t\t\t</address>\r\n                <h4>Phone:</h4>\r\n                <address>\r\n                    (713) 791-1414\r\n\t\t\t\t\t</address>\r\n            </div>\r\n\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default ContactAddress;\r\n","const ContactMap = () => {\r\n    return (\r\n        <section className=\"container-full top-space\">\r\n            <div id=\"map\"></div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ContactMap;","import { Breadcrumb } from \"../breadcrumb\";\r\nimport { ContactAddress } from \"../contactaddress\"\r\nimport { ContactMap } from \"../contactmap\"\r\n\r\nconst ContactUs = () => {\r\n    return (\r\n        <>\r\n            <header id=\"head\" className=\"secondary\"></header>\r\n\r\n            <div className=\"container\">\r\n                <Breadcrumb activeLink=\"Contact\" />\r\n\r\n                <div className=\"row\">\r\n                    <article className=\"col-sm-9 maincontent\">\r\n                        <header className=\"page-header\">\r\n                            <h1 className=\"page-title\">Contact us</h1>\r\n                        </header>\r\n\r\n                        <p>\r\n                            We’d love to hear from you. Interested in working together? Fill out the form below with some info about your project and I will get back to you as soon as I can. Please allow a couple days for me to respond.\r\n\t\t\t\t        </p>\r\n\r\n                        <br />\r\n\r\n                        <form>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-4\">\r\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Name\" />\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Email\" />\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Phone\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <br />\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <textarea placeholder=\"Type your message here...\" className=\"form-control\" rows={9}></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <br />\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <label className=\"checkbox\"><input type=\"checkbox\" /> Sign up for newsletter</label>\r\n                                </div>\r\n                                <div className=\"col-sm-6 text-right\">\r\n                                    <input className=\"btn btn-action\" type=\"submit\" value=\"Send message\" />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </article>\r\n\r\n                    <ContactAddress />\r\n                </div>\r\n            </div>\r\n\r\n            <ContactMap />\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default ContactUs;\r\n","import { SigninActionTypes } from \"../action-types\";\r\nimport SigninAction from \"../actions/signin-action\";\r\nimport { UserProfile } from \"../models\";\r\n\r\nconst DEFAULT_USER_PROFILE: UserProfile = {\r\n    userProfileId: \"\",\r\n    email: \"\",\r\n    department: \"\",\r\n    title: \"\"\r\n};\r\n\r\nconst SigninActionCreators = {\r\n    createAuthenticationSuccessful: (userProfile: UserProfile = DEFAULT_USER_PROFILE): SigninAction => {\r\n        return {\r\n            type: SigninActionTypes.AuthenticationSuccessful,\r\n            userProfile: userProfile,\r\n            authenticationStatus: true\r\n        };\r\n    },\r\n    createAuthenticationFailed: (errorText: string = \"\"): SigninAction => {\r\n        return {\r\n            type: SigninActionTypes.AuthenticationFailed,\r\n            authenticationStatus: false,\r\n            authenticationError: {\r\n                errorStatus: true,\r\n                errorText: errorText\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default SigninActionCreators;\r\n","const INVALID_TOKEN = \"Invalid Authentication Token Specified!\";\r\nconst AUTH_TOKEN = \"ms-training-auth-token\";\r\n\r\nconst AuthenticationTokenService = {\r\n    setAuthToken: (token: string) => {\r\n        if (!token) {\r\n            throw new Error(INVALID_TOKEN);\r\n        }\r\n\r\n        window.localStorage.setItem(AUTH_TOKEN, token);\r\n    },\r\n    getAuthToken: (): string => {\r\n        const token = window.localStorage.getItem(AUTH_TOKEN) || \"\";\r\n\r\n        return token;\r\n    },\r\n    removeAuthToken: () => {\r\n        window.localStorage.removeItem(AUTH_TOKEN);\r\n    }\r\n};\r\n\r\nexport default AuthenticationTokenService;\r\n","class CustomerProfile {\r\n    public constructor(public customerId: number, public customerName: string,\r\n        public address: string, public email: string, public phoneNumber: string,\r\n        public customerType: string, public creditLimit: number,\r\n        public activeStatus: boolean, public remarks: string, public photoUrl?: string) {\r\n    }\r\n}\r\n\r\nexport default CustomerProfile;\r\n","class UserProfile {\r\n    public constructor(public userProfileId: string,\r\n        public email: string,\r\n        public department: string,\r\n        public title: string) {}\r\n}\r\n\r\nexport default UserProfile;\r\n","import { UserProfile } from \"../models\";\r\n\r\nconst INVALID_TOKEN = \"Invalid Token Specified!\";\r\nconst TOKEN_DELIMITER = \".\";\r\n\r\nconst TokenParserService = {\r\n    parse: (token: string): UserProfile => {\r\n        if (!token) {\r\n            throw new Error(INVALID_TOKEN);\r\n        }\r\n\r\n        const splittedToken = token.split(TOKEN_DELIMITER);\r\n        const payload = splittedToken[1];\r\n        const decodedPayload = JSON.parse(atob(payload));\r\n\r\n        const userProfile: UserProfile = new UserProfile(\r\n            decodedPayload.userProfileId,\r\n            decodedPayload.email,\r\n            decodedPayload.department,\r\n            decodedPayload.title);\r\n\r\n        return userProfile;\r\n    }\r\n};\r\n\r\nexport default TokenParserService;\r\n","import 'whatwg-fetch';\r\nimport SigninActionCreators from '../action-creators/signin-action-creators';\r\nimport AuthenticationTokenService from './authentication-token-service';\r\nimport TokenParserService from './token-parser-service';\r\n\r\nconst INVALID_DISPATCHER_SPECIFIED = \"Invalid Dispatcher Specified!\";\r\nconst DEFAULT_AUTH_URL = \"https://localhost:44300/authenticate\";\r\nconst AUTHENTICATION_FAILED = \"Authentication Failed and Unable to Prepare Tokens!\";\r\n\r\nconst AuthenticationService = {\r\n    authenticate: (userProfileId: string, password: string, callback?: () => void) => {\r\n        return (dispatch: any) => {\r\n            const validation = dispatch !== undefined || dispatch !== null;\r\n\r\n            if (!validation) {\r\n                throw new Error(INVALID_DISPATCHER_SPECIFIED);\r\n            }\r\n\r\n            const authenticationUrl = process.env.REACT_APP_AUTH_URL || DEFAULT_AUTH_URL;\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    userProfileId,\r\n                    password\r\n                })\r\n            };\r\n\r\n            fetch(authenticationUrl, requestOptions)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        dispatch(SigninActionCreators.createAuthenticationFailed(response.statusText));\r\n\r\n                        return;\r\n                    }\r\n\r\n                    return response;\r\n                })\r\n                .then(response => response?.json())\r\n                .then(response => {\r\n                    const token = response.token;\r\n\r\n                    if (token) {\r\n                        const userProfile = TokenParserService.parse(token);\r\n\r\n                        AuthenticationTokenService.setAuthToken(token);\r\n\r\n                        dispatch(SigninActionCreators.createAuthenticationSuccessful(userProfile));\r\n                    } else {\r\n                        dispatch(SigninActionCreators.createAuthenticationFailed(AUTHENTICATION_FAILED));\r\n                    }\r\n                })\r\n                .catch(error => dispatch(SigninActionCreators.createAuthenticationFailed(error)))\r\n                .finally(() => {\r\n                    if (callback !== undefined) {\r\n                        callback();\r\n                    }\r\n                });\r\n        };\r\n    }\r\n};\r\n\r\nexport default AuthenticationService;\r\n","const BrowserHistoryService = {\r\n    navigate: (route: string, title: string = \"\") => {\r\n        const history = window.history;\r\n\r\n        if (history !== null) {\r\n            history.pushState(null, title, route);\r\n        }\r\n    }\r\n};\r\n\r\nexport {\r\n    BrowserHistoryService\r\n};\r\n","import { CustomerActionTypes } from \"../action-types\";\r\nimport { CustomerAction } from \"../actions\";\r\nimport { CustomerProfile } from \"../models\";\r\n\r\nconst CustomerActionCreators = {\r\n    createFillCustomers: (customers: CustomerProfile[] = []): CustomerAction => {\r\n        return {\r\n            type: CustomerActionTypes.FillCustomers,\r\n            customers: customers\r\n        };\r\n    },\r\n    createIsLoading: (loadingStatus: boolean = false): CustomerAction => {\r\n        return {\r\n            type: CustomerActionTypes.IsLoading,\r\n            isLoading: loadingStatus\r\n        };\r\n    },\r\n    createErrorOccurred: (error: { errorText?: string } = {}): CustomerAction => {\r\n        return {\r\n            type: CustomerActionTypes.ErrorOccurred,\r\n            errorOccurred: {\r\n                errorText: error.errorText\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nexport default CustomerActionCreators;\r\n","import { CustomerProfile } from \"../models\";\r\n\r\nconst DEFAULT_PHOTOS_FOLDER = \"/assets/images/people/\";\r\nconst PHOTOS_FOLDER = process.env.REACT_APP_PHOTOS_FOLDER || DEFAULT_PHOTOS_FOLDER;\r\n\r\nconst CustomerMap = {\r\n    transform(customer: any): CustomerProfile {\r\n        const photoUrl = `${PHOTOS_FOLDER}/Customer${customer.customerId}.jpg`;\r\n\r\n        return new CustomerProfile(customer.customerId, customer.customerName,\r\n            customer.address, customer.email, customer.phoneNumber,\r\n            customer.customerType, customer.creditLimit,\r\n            customer.activeStatus, customer.remarks, photoUrl);\r\n    }\r\n};\r\n\r\nexport default CustomerMap;","import { useHistory } from \"react-router-dom\";\r\nimport { CustomerActionCreators } from \"../action-creators\";\r\nimport { CustomerProfile, UserProfile } from \"../models\";\r\nimport { CustomerMap } from \"../utilities\";\r\nimport AuthenticationTokenService from \"./authentication-token-service\";\r\n\r\nconst DEFAULT_CUSTOMER_SERVICE_URL = \"https://localhost:44300/api/customers\";\r\nconst INVALID_CUSTOMER_ARGUMENTS = \"Invalid Customer Argument(s) Specified!\";\r\nconst MIN_CREDIT = 1;\r\n\r\nasync function saveCustomeRecord(customerProfile: CustomerProfile): Promise<boolean> {\r\n    const validation = customerProfile !== undefined &&\r\n        customerProfile.customerId && customerProfile.customerName &&\r\n        customerProfile.creditLimit >= MIN_CREDIT;\r\n    let status: boolean = false;\r\n\r\n    if (!validation) {\r\n        throw new Error(INVALID_CUSTOMER_ARGUMENTS);\r\n    }\r\n\r\n    const requestUrl = process.env.REACT_APP_CUSTOMER_SERVICE_URL || DEFAULT_CUSTOMER_SERVICE_URL;\r\n    const token = AuthenticationTokenService.getAuthToken();\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(customerProfile)\r\n    };\r\n\r\n    const response = await fetch(requestUrl, requestOptions);\r\n\r\n    if (!response.ok) {\r\n        status = false;\r\n    } else {\r\n        const parsedJson = await response.json();\r\n\r\n        status = parsedJson === true;\r\n    }\r\n\r\n    return status;\r\n}\r\n\r\nconst CustomerService = {\r\n    getCustomers: () => {\r\n        return (dispatch: any) => {\r\n            const validation = dispatch !== undefined || dispatch !== null;\r\n            const requestUrl = process.env.REACT_APP_CUSTOMER_SERVICE_URL || DEFAULT_CUSTOMER_SERVICE_URL;\r\n\r\n            dispatch(CustomerActionCreators.createIsLoading(true));\r\n\r\n            const token = AuthenticationTokenService.getAuthToken();\r\n\r\n            if (!token) {\r\n                return;\r\n            }\r\n\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            };\r\n\r\n            fetch(requestUrl, requestOptions)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        dispatch(CustomerActionCreators.createErrorOccurred({\r\n                            errorText: response.statusText\r\n                        }));\r\n\r\n                        return;\r\n                    }\r\n\r\n                    return response;\r\n                })\r\n                .then(response => response?.json())\r\n                .then((customers: any[]) => {\r\n                    const mappedCustomers = customers.map(\r\n                        customer => CustomerMap.transform(customer));\r\n\r\n                    dispatch(CustomerActionCreators.createFillCustomers(mappedCustomers));\r\n                })\r\n                .catch(error => dispatch(CustomerActionCreators.createErrorOccurred({\r\n                    errorText: error\r\n                })))\r\n                .finally(() => dispatch(CustomerActionCreators.createIsLoading(false)));\r\n        };\r\n    },\r\n    saveCustomerRecord: saveCustomeRecord\r\n};\r\n\r\nexport default CustomerService;\r\n","declare var io: any;\r\n\r\nconst DEFAULT_PUSH_NOTIFICATION_URL = \"https://localhost:44300/\";\r\n\r\ntype NotificationCallback = (payload: any) => void;\r\n\r\nclass PushNotificationService {\r\n    private socketClient: any;\r\n    private registeredCallbacks: Map<string, Set<NotificationCallback>>;\r\n\r\n    constructor() {\r\n        const pushNotificationUrl = process.env.REACT_APP_PUSH_NOTIFICATION_URL || DEFAULT_PUSH_NOTIFICATION_URL;\r\n\r\n        this.socketClient = io.connect(pushNotificationUrl);\r\n        this.registeredCallbacks = new Map<string, Set<NotificationCallback>>();\r\n    }\r\n\r\n    register(eventName: string, callback: NotificationCallback) {\r\n        const validation = eventName !== \"\" && eventName !== null &&\r\n            callback !== null;\r\n\r\n        if (validation) {\r\n            const isEventExist = this.registeredCallbacks.has(eventName)\r\n            const callbacks = isEventExist ?\r\n                this.registeredCallbacks.get(eventName) : new Set<NotificationCallback>();\r\n\r\n            if (callbacks !== undefined) {\r\n                callbacks?.add(callback);\r\n\r\n                this.registeredCallbacks.set(eventName, callbacks);\r\n            }\r\n\r\n            if (!isEventExist) {\r\n                this.socketClient.on(eventName, (payload: any) => {\r\n                    const callbacks = this.registeredCallbacks.get(eventName);\r\n\r\n                    callbacks?.forEach(\r\n                        notificationCallback => notificationCallback(payload));\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    unregister(eventName: string, callback: NotificationCallback) {\r\n        const validation = eventName !== \"\" && eventName !== null &&\r\n            callback !== null;\r\n\r\n        if (validation) {\r\n            const isEventExist = this.registeredCallbacks.has(eventName)\r\n\r\n            if (isEventExist) {\r\n                const callbacks = this.registeredCallbacks.get(eventName);\r\n\r\n                if (callbacks !== undefined) {\r\n                    callbacks?.delete(callback);\r\n\r\n                    this.registeredCallbacks.set(eventName, callbacks);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst pushNotificationService = new PushNotificationService();\r\n\r\nexport default pushNotificationService;\r\n","import React from 'react';\r\nimport CustomerDetailViewerProps from './customer-detail-viewer-props';\r\n\r\nconst CustomerDetailViewer: React.FC<CustomerDetailViewerProps> = props => {\r\n    let markup = (\r\n        <div className=\"modal fade\" id={`customer-${props.customer?.customerId}`} tabIndex={-1} role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n                        <h4 className=\"modal-title\" id=\"myModalLabel\">\r\n                            Customer Detail of {props.customer?.customerName}\r\n                        </h4>\r\n                    </div>\r\n\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <img alt=\"Customer\"\r\n                                    src={props.customer?.photoUrl}\r\n                                    className=\"img img-responsive img-rounded\" />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-8\">\r\n                                <table className=\"table table-responsive table-condensed table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Property Name</th>\r\n                                            <th>Property Value</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>Customer Profile Id:</td>\r\n                                            <td> {props.customer?.customerId} </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <td>Business Contact Name:</td>\r\n                                            <td> {props.customer?.customerName} </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <td>Customer Address:</td>\r\n                                            <td> {props.customer?.address} </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <td>Email:</td>\r\n                                            <td> {props.customer?.email} </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <td>Phone Number:</td>\r\n                                            <td> {props.customer?.phoneNumber} </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <td>Customer Type:</td>\r\n                                            <td> {props.customer?.customerType} </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <td>Customer Credit Limit:</td>\r\n                                            <td> {props.customer?.creditLimit} </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <td>Active Status:</td>\r\n                                            <td>{props.customer?.activeStatus ? \"TRUE\": \"FALSE\"} </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                Customer Remarks:\r\n                        \r\n                                <br />\r\n\r\n                                <p className=\"text-left\">\r\n                                    {props.customer?.remarks}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return markup;\r\n};\r\n\r\nexport default CustomerDetailViewer;\r\n","import React from 'react';\r\nimport { CustomerDetailViewer } from '../customer-detail-viewer';\r\nimport CustomerViewerProps from './customer-viewer-props';\r\n\r\nconst CustomerViewer: React.FC<CustomerViewerProps> = props => {\r\n    let remarks = \"\";\r\n    let name = \"\";\r\n\r\n    if (props.customer) {\r\n        remarks = props.customer?.remarks.length >= 20 ?\r\n            `${props.customer?.remarks.substr(0, 20)} ...` : props.customer?.remarks;\r\n\r\n        name = props.customer?.customerName.length >= 12 ?\r\n            `${props.customer?.customerName.substr(0, 12)} ...` : props.customer?.customerName;\r\n    }\r\n\r\n    let markup = (\r\n        <div className=\"thumbnail\">\r\n            <img src={props.customer?.photoUrl} alt=\"Customer\"\r\n                title=\"Customer Photo of {this.props.customer.name}\" />\r\n            <div className=\"caption\">\r\n                <h3>\r\n                    {name}\r\n                </h3>\r\n\r\n                <p>\r\n                    {remarks}\r\n                </p>\r\n\r\n                <p>\r\n                    <a href=\"/dashboard\" className=\"btn btn-primary\" role=\"button\">Dashboard</a>\r\n\r\n                    &nbsp;\r\n\r\n                    <button className=\"btn btn-default\"\r\n                        data-target={`#customer-${props.customer?.customerId}`}\r\n                        data-toggle='modal'>\r\n                        Details\r\n                    </button>\r\n                </p>\r\n            </div>\r\n\r\n            <div>\r\n                <CustomerDetailViewer customer={props.customer} />\r\n            </div>\r\n        </div>);\r\n\r\n    return markup;\r\n};\r\n\r\nexport default CustomerViewer;\r\n","import React, { useState } from 'react';\r\nimport SearchPanelProps from './search-panel-props';\r\n\r\nconst SearchPanel: React.FC<SearchPanelProps> = props => {\r\n    const [searchString, setSearchString] = useState(\"\");\r\n\r\n    const handleEvent = (e: any) => {\r\n        setSearchString(e.target.value);\r\n\r\n        if (props.handleSearch !== undefined) {\r\n            props.handleSearch(e.target.value);\r\n        }\r\n    };\r\n\r\n    let markup = (\r\n        <div className='panel panel-primary'>\r\n            <div className='panel-heading'>\r\n                Customers Search Panel {searchString && (<span>Searching ... {searchString}</span>)}\r\n            </div>\r\n\r\n            <div className='panel-body'>\r\n                <div className=\"input-group\">\r\n                    <span className=\"input-group-addon\" id=\"basic-addon1\">\r\n                        Customer Name:\r\n                    </span>\r\n\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        onChange={e => handleEvent(e)}\r\n                        placeholder=\"Enter Search String Here ...\"\r\n                        aria-describedby=\"basic-addon1\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return markup;\r\n};\r\n\r\nexport default SearchPanel;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CustomerProfile } from '../../models';\r\nimport { AuthenticationTokenService, BrowserHistoryService, CustomerService, pushNotificationService } from '../../services';\r\nimport { CustomerMap } from '../../utilities';\r\nimport { Breadcrumb } from '../breadcrumb';\r\nimport { CustomerViewer } from '../customer-viewer';\r\nimport { SearchPanel } from '../search-panel';\r\nimport CrmSystemProps from './crmsystem-props';\r\n\r\nconst MIN_CUSTOMRES = 1;\r\nconst NEW_CUSTOMER_RECORD = \"NewCustomerRecord\";\r\nconst REDIRECT_TO_HOME_FOR_INVALID_TOKEN = \"/sign-in\";\r\n\r\ninterface CrmSystemState {\r\n    customers: CustomerProfile[];\r\n}\r\n\r\nclass CrmSystem extends React.Component<CrmSystemProps, CrmSystemState> {\r\n    constructor(props: CrmSystemProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            customers: []\r\n        };\r\n    }\r\n\r\n    // TODO: BEFORE REACT LOADS THE COMPONENT, WE NEED TO CHECK THE TOKEN \r\n    // REDIRECT TO SIGNIN\r\n    // DEPRECATED\r\n    componentWillMount() {\r\n        const token = AuthenticationTokenService.getAuthToken();\r\n\r\n        if (!token) {\r\n            BrowserHistoryService.navigate(REDIRECT_TO_HOME_FOR_INVALID_TOKEN);\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        BrowserHistoryService.navigate(REDIRECT_TO_HOME_FOR_INVALID_TOKEN);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (typeof this.props.getCustomers === 'function') {\r\n            this.props.getCustomers();\r\n        }\r\n\r\n        pushNotificationService.register(NEW_CUSTOMER_RECORD,\r\n            (payload: any) => {\r\n                if (payload !== null) {\r\n                    const customerProfile = CustomerMap.transform(payload);\r\n                    const existingCustomers = this.state.customers || [];\r\n\r\n                    this.setState({\r\n                        customers: [...existingCustomers, customerProfile]\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        this.setState({\r\n            customers: this.props.customers || []\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.error !== undefined && this.props.error.errorText !== undefined) {\r\n            const errorTitle = `ERROR - ${this.props.error.errorText}`;\r\n            const navigateTo = \"app-error\";\r\n\r\n            BrowserHistoryService.navigate(navigateTo, errorTitle);\r\n        }\r\n    }\r\n\r\n    filterCustomers(searchString: string) {\r\n        const validation = searchString !== undefined &&\r\n            searchString !== \"\" && searchString !== null;\r\n\r\n        if (validation) {\r\n            if (this.props.customers !== undefined) {\r\n                const filteredCustomers = this.props.customers.filter(\r\n                    customer => customer.customerName.indexOf(searchString) >= 0);\r\n\r\n                this.setState({\r\n                    customers: filteredCustomers\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                customers: this.props.customers || []\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let markup = (<></>);\r\n\r\n        const isLoading = this.props.isLoading !== undefined && this.props.isLoading === true;\r\n        const isCustomersDataAvailable =\r\n            this.state.customers !== undefined &&\r\n            this.state.customers.length >= MIN_CUSTOMRES;\r\n\r\n        let customersMarkup;\r\n\r\n        if (isCustomersDataAvailable) {\r\n            customersMarkup = (\r\n                <div className='row'>\r\n                    {\r\n                        this.state.customers?.map(customerRecord => (\r\n                            <div className='col-md-3' key={customerRecord.customerId}>\r\n                                <CustomerViewer customer={customerRecord} />\r\n                            </div>))\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n\r\n        markup = (\r\n            <>\r\n                <header id=\"head\" className=\"secondary\"></header>\r\n                <div className=\"container\">\r\n                    <Breadcrumb activeLink=\"Customers\" />\r\n\r\n                    <br />\r\n\r\n                    <div className=\"row\">\r\n                        <article className=\"col-sm-12 maincontent\">\r\n                            {isLoading && (\r\n                                <div>\r\n                                    Loading ... Please Wait ...\r\n                                </div>\r\n                            )}\r\n\r\n                            <SearchPanel handleSearch={\r\n                                searchString => this.filterCustomers(searchString)} />\r\n\r\n                            {isCustomersDataAvailable && customersMarkup}\r\n                        </article>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n\r\n        return markup;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any = {}) => {\r\n    return {\r\n        customers: state.fillCustomers,\r\n        isLoading: state.isLoading,\r\n        error: state.errorOccurred\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        getCustomers: () => dispatch(CustomerService.getCustomers())\r\n    };\r\n};\r\n\r\nconst ConnectedCrmSystem =\r\n    connect(mapStateToProps, mapDispatchToProps)(CrmSystem);\r\n\r\nexport default ConnectedCrmSystem;","const Contact = () => {\r\n    return (\r\n        <div className=\"col-md-3 widget\">\r\n            <h3 className=\"widget-title\">Contact</h3>\r\n            <div className=\"widget-body\">\r\n                <p>+234 23 9873237<br />\r\n                    <a href=\"mailto:#\">some.email@somewhere.com</a> <br />\r\n                    <br />\r\n\t\t\t\t\t\t\t\t234 Hidden Pond Road, Ashland City, TN 37015\r\n\t\t\t\t\t\t\t</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","const Copyright = () => {\r\n    return (\r\n        <div className=\"footer2\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-6 widget\">\r\n                        <div className=\"widget-body\">\r\n                            <p className=\"simplenav\">\r\n                                <a href=\"#/\">Home</a> |\r\n\t\t\t\t\t\t\t\t<a href=\"about.html\">About</a> |\r\n\t\t\t\t\t\t\t\t<a href=\"sidebar-right.html\">Sidebar</a> |\r\n\t\t\t\t\t\t\t\t<a href=\"contact.html\">Contact</a> |\r\n\t\t\t\t\t\t\t\t<b><a href=\"signup.html\">Sign up</a></b>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 widget\">\r\n                        <div className=\"widget-body\">\r\n                            <p className=\"text-right\">\r\n                                Copyright &copy; 2014, Your name. Designed by <a href=\"http://gettemplate.com/\" rel=\"designer\">gettemplate</a>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Copyright;\r\n","const Followme = () => {\r\n    return (\r\n        <div className=\"col-md-3 widget\">\r\n            <h3 className=\"widget-title\">Follow me</h3>\r\n            <div className=\"widget-body\">\r\n                <p className=\"follow-me-icons\">\r\n                    <a href=\"/\"><i className=\"fa fa-twitter fa-2\"></i></a>\r\n                    <a href=\"/\"><i className=\"fa fa-dribbble fa-2\"></i></a>\r\n                    <a href=\"/\"><i className=\"fa fa-github fa-2\"></i></a>\r\n                    <a href=\"/\"><i className=\"fa fa-facebook fa-2\"></i></a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Followme;\r\n","const Summary = () => {\r\n    return (\r\n        <div className=\"col-md-6 widget\">\r\n            <h3 className=\"widget-title\">Text widget</h3>\r\n            <div className=\"widget-body\">\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Excepturi, dolores, quibusdam architecto voluptatem amet fugiat nesciunt placeat provident cumque accusamus itaque voluptate modi quidem dolore optio velit hic iusto vero praesentium repellat commodi ad id expedita cupiditate repellendus possimus unde?</p>\r\n                <p>Eius consequatur nihil quibusdam! Laborum, rerum, quis, inventore ipsa autem repellat provident assumenda labore soluta minima alias temporibus facere distinctio quas adipisci nam sunt explicabo officia tenetur at ea quos doloribus dolorum voluptate reprehenderit architecto sint libero illo et hic.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;","import { Contact } from \"../contact\";\r\nimport { Copyright } from \"../copyright\";\r\nimport { Followme } from \"../followme\";\r\nimport { Summary } from \"../summary\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer id=\"footer\" className=\"top-space\">\r\n            <div className=\"footer1\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Contact />\r\n                        <Followme />\r\n                        <Summary />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Copyright />\r\n        </footer>\r\n\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\"\r\nimport NavigationProps from './navigation-props';\r\n\r\nconst Navigation: React.FC<NavigationProps> = props => {\r\n    const isAuthenticated = props.authenticationStatus !== undefined &&\r\n        props.authenticationStatus === true;\r\n\r\n    return (\r\n        <div className=\"navbar-collapse collapse\">\r\n            <ul className=\"nav navbar-nav pull-right\">\r\n                <li className=\"active\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n\r\n                <li><Link to=\"/about-us\">About Us</Link></li>\r\n\r\n                <li>\r\n                    <Link to=\"/contact-us\">Contact</Link>\r\n                </li>\r\n\r\n                {isAuthenticated && (\r\n                    <li>\r\n                        <Link to=\"/crm-system\">Customers</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {isAuthenticated && (\r\n                    <li>\r\n                        <Link to=\"/new-customer\">New Customer</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {!isAuthenticated && (\r\n                    <li>\r\n                        <Link to=\"/sign-in\">Sign-In / Sign-Up</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {isAuthenticated && (\r\n                    <li>\r\n                        <Link to=\"/user-profile\" style={{ color: 'yellow' }}>\r\n                            Welcome {props.userProfile?.userProfileId},\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        authenticationStatus: state.authenticationStatus,\r\n        userProfile: state.userProfile\r\n    };\r\n};\r\n\r\nconst ConnectedNavigation = connect(mapStateToProps)(Navigation);\r\n\r\nexport default ConnectedNavigation;\r\n","import { ConnectedNavigation } from \"../navigation\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"navbar navbar-inverse navbar-fixed-top headroom\" >\r\n            <div className=\"container\">\r\n                <div className=\"navbar-header\">\r\n                    <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"><span className=\"icon-bar\"></span> <span className=\"icon-bar\"></span> <span className=\"icon-bar\"></span> </button>\r\n                    <a className=\"navbar-brand\" href=\"index.html\"><img src=\"assets/images/logo.png\" alt=\"Progressus HTML5 template\" /></a>\r\n                </div>\r\n\r\n                <ConnectedNavigation />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","const Faq = () => {\r\n    return (\r\n        <div className=\"container\">\r\n\r\n                <h2 className=\"text-center top-space\">Frequently Asked Questions</h2>\r\n                <br />\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <h3>Which code editor would you recommend?</h3>\r\n                        <p>I'd highly recommend you <a href=\"http://www.sublimetext.com/\">Sublime Text</a> - a free to try text editor which I'm using daily. Awesome tool!</p>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <h3>Nice header. Where do I find more images like that one?</h3>\r\n                        <p>\r\n                            Well, there are thousands of stock art galleries, but personally,\r\n                        I prefer to use photos from these sites: <a href=\"http://unsplash.com\">Unsplash.com</a>\r\n                        and <a href=\"http://www.flickr.com/creativecommons/by-2.0/tags/\">Flickr - Creative Commons</a></p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <h3>Can I use it to build a site for my client?</h3>\r\n                        <p>\r\n                            Yes, you can. You may use this template for any purpose, just don't forget about the <a href=\"http://creativecommons.org/licenses/by/3.0/\">license</a>,\r\n                        which says: \"You must give appropriate credit\", i.e. you must provide the name of the creator and a link to the original template in your work.\r\n                    </p>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <h3>Can you customize this template for me?</h3>\r\n                        <p>Yes, I can. Please drop me a line to sergey-at-pozhilov.com and describe your needs in details. Please note, my services are not cheap.</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"jumbotron top-space\">\r\n                    <h4>Dicta, nostrum nemo soluta sapiente sit dolor quae voluptas quidem doloribus recusandae facere magni ullam suscipit sunt atque rerum eaque iusto facilis esse nam veniam incidunt officia perspiciatis at voluptatibus. Libero, aliquid illum possimus numquam fuga.</h4>\r\n                    <p className=\"text-right\"><a href=\"/\" className=\"btn btn-primary btn-large\">Learn more »</a></p>\r\n                </div>\r\n\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Faq;\r\n","const Reasons = () => {\r\n    return (\r\n        <div className=\"jumbotron top-space\">\r\n            <div className=\"container\">\r\n                <h3 className=\"text-center thin\">Reasons to use this template</h3>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 col-sm-6 highlight\">\r\n                        <div className=\"h-caption\"><h4><i className=\"fa fa-cogs fa-5\"></i>Bootstrap-powered</h4></div>\r\n                        <div className=\"h-body text-center\">\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Atque aliquid adipisci aspernatur. Soluta quisquam dignissimos earum quasi voluptate. Amet, dignissimos, tenetur vitae dolor quam iusto assumenda hic reprehenderit?</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-6 highlight\">\r\n                        <div className=\"h-caption\"><h4><i className=\"fa fa-flash fa-5\"></i>Fat-free</h4></div>\r\n                        <div className=\"h-body text-center\">\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores, commodi, sequi quis ad fugit omnis cumque a libero error nesciunt molestiae repellat quos perferendis numquam quibusdam rerum repellendus laboriosam reprehenderit! </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-6 highlight\">\r\n                        <div className=\"h-caption\"><h4><i className=\"fa fa-heart fa-5\"></i>Creative Commons</h4></div>\r\n                        <div className=\"h-body text-center\">\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptatem, vitae, perferendis, perspiciatis nobis voluptate quod illum soluta minima ipsam ratione quia numquam eveniet eum reprehenderit dolorem dicta nesciunt corporis?</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-6 highlight\">\r\n                        <div className=\"h-caption\"><h4><i className=\"fa fa-smile-o fa-5\"></i>Author's support</h4></div>\r\n                        <div className=\"h-body text-center\">\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias, excepturi, maiores, dolorem quasi reprehenderit illo accusamus nulla minima repudiandae quas ducimus reiciendis odio sequi atque temporibus facere corporis eos expedita? </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reasons;\r\n","const Social = () => {\r\n    return (\r\n        <section id=\"social\">\r\n            <div className=\"container\">\r\n                <div className=\"wrapper clearfix\">\r\n                    <div className=\"addthis_toolbox addthis_default_style\">\r\n                        <a href=\"/\" className=\"addthis_button_facebook_like\">\r\n                            &nbsp;\r\n                        </a>\r\n                        <a href=\"/\" className=\"addthis_button_tweet\">\r\n                            &nbsp;\r\n                        </a>\r\n                        <a href=\"/\" className=\"addthis_button_linkedin_counter\">\r\n                            &nbsp;\r\n                            </a>\r\n                        <a href=\"/\" className=\"addthis_button_google_plusone\">\r\n                            &nbsp;\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Social;","import React from 'react';\r\nimport { Faq } from \"../faq\";\r\nimport { Reasons } from \"../reasons\";\r\nimport { Social } from \"../social\";\r\nimport HomeProps from './home-props';\r\n\r\nconst Home: React.FC<HomeProps> = props => {\r\n    return (\r\n        <>\r\n            <header id=\"head\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h1 className=\"lead\"> {props.title} </h1>\r\n                        <p className=\"tagline\">PROGRESSUS: free business bootstrap template by <a href=\"http://www.gettemplate.com/?utm_source=progressus&amp;utm_medium=template&amp;utm_campaign=progressus\">GetTemplate</a></p>\r\n                        <p><a href=\"/\" className=\"btn btn-default btn-lg\" role=\"button\">MORE INFO</a> <a href=\"/\" className=\"btn btn-action btn-lg\" role=\"button\">DOWNLOAD NOW</a></p>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"container text-center\">\r\n                <br /> <br />\r\n                <h2 className=\"thin\">The best place to tell people why they are here</h2>\r\n                <p className=\"text-muted\">\r\n                    The difference between involvement and commitment is like an eggs-and-ham breakfast:<br />\r\n                        the chicken was involved; the pig was committed.\r\n            </p>\r\n            </div>\r\n\r\n            <Reasons />\r\n            <Faq />\r\n            <Social />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { useState } from \"react\";\r\n\r\ntype HookCallback = (validationStatus?: boolean) => void;\r\n\r\nconst useCollectFormDataAndValidate = (initialValues: any, callback: HookCallback) => {\r\n    const [inputs, setInputs] = useState(initialValues);\r\n\r\n    const validateInputs = (obj: any): boolean => {\r\n        let validationStatus = false;\r\n\r\n        for (let propertyIndex in obj) {\r\n            const propertyValue = obj[propertyIndex];\r\n            const validation = propertyValue !== undefined &&\r\n                propertyValue !== null && (propertyValue !== 0 || propertyValue !== \"\");\r\n\r\n            validationStatus = validation;\r\n\r\n            if (!validation) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return validationStatus;\r\n    };\r\n\r\n    const handleSubmit = (event: any) => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        const validationStatus = validateInputs(inputs);\r\n\r\n        callback(validationStatus);\r\n    };\r\n\r\n    const handleChange = (event: any, name?: string, value?: any) => {\r\n        if (event) {\r\n            event.persist();\r\n        }\r\n\r\n        if (name === undefined) {\r\n            const propertyName = event.target.name;\r\n            const propertyValue = event.target.value;\r\n\r\n            if (propertyName && propertyValue) {\r\n                setInputs({\r\n                    ...inputs,\r\n                    [propertyName]: propertyValue\r\n                });\r\n            }\r\n        } else {\r\n            setInputs({\r\n                ...inputs,\r\n                [name]: value\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        handleSubmit,\r\n        handleChange,\r\n        inputs\r\n    };\r\n};\r\n\r\nexport default useCollectFormDataAndValidate;\r\n","import React, { useState } from 'react';\r\nimport { Breadcrumb } from '../breadcrumb';\r\nimport CustomerRegistrationFormProps from './customer-registration-form-props';\r\nimport { CustomerProfile } from '../../models';\r\nimport { useCollectFormDataAndValidate } from '../../hooks';\r\nimport { CustomerService } from '../../services';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst DEFAULT_CUSTOMER_PROFILE: CustomerProfile = {\r\n    customerId: Math.floor(Math.random() * (10000000 - 1) + 1),\r\n    customerName: \"\",\r\n    address: \"\",\r\n    creditLimit: 0,\r\n    activeStatus: false,\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    customerType: \"\",\r\n    remarks: \"\"\r\n};\r\n\r\nconst REDIRECT_TO_CUSTOMERS = \"/crm-system\";\r\nconst DEFAULT_TIMEOUT = 3000;\r\n\r\nconst CustomerRegistrationForm: React.FC<CustomerRegistrationFormProps> = props => {\r\n    const [status, setStatus] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const processCustomerRecord = async (validationStatus?: boolean) => {\r\n        if (validationStatus !== undefined && validationStatus === true) {\r\n            setStatus(true);\r\n\r\n            const saveStatus = await CustomerService.saveCustomerRecord(inputs);\r\n\r\n            if (saveStatus) {\r\n                setMessage(\"Customer Information Saved Successfully!\");\r\n\r\n                setTimeout(() => history.push(REDIRECT_TO_CUSTOMERS), DEFAULT_TIMEOUT);\r\n            } else {\r\n                setMessage(\"Unable to save customer record!, Please try again later!\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const { handleSubmit, handleChange, inputs } =\r\n        useCollectFormDataAndValidate(DEFAULT_CUSTOMER_PROFILE, processCustomerRecord);\r\n\r\n    return (\r\n        <>\r\n            <header id=\"head\" className=\"secondary\"></header>\r\n\r\n            <div className=\"container\">\r\n                <Breadcrumb activeLink=\"New Customer\" />\r\n\r\n                <br />\r\n\r\n                <div className=\"row\">\r\n                    <div className='col-md-12'>\r\n                        <div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-10\">\r\n                                    <div className=\"well well-sm\">\r\n                                        <h5>New Customer Portfolio Management</h5>\r\n                                        <h6>This would help to create a new customer record in the CRM System</h6>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-10\">\r\n                                    <form className=\"form-horizontal\" onSubmit={e => handleSubmit(e)}>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"inputCustomerId\" className=\"col-sm-2 control-label\">Customer Id:</label>\r\n                                            <div className=\"col-sm-10\">\r\n                                                <input type=\"text\" readOnly className=\"form-control\"\r\n                                                    value={inputs.customerId}\r\n                                                    name=\"customerId\" id=\"inputCustomerId\" placeholder=\"Enter Customer Name Here ...\" />\r\n                                                <input type=\"hidden\" value={inputs.customerId} name=\"customerId\" id=\"inputCustomerId\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"inputCustomerName\" className=\"col-sm-2 control-label\">Customer Name:</label>\r\n                                            <div className=\"col-sm-10\">\r\n                                                <input type=\"text\" className=\"form-control\" value={inputs.customerName}\r\n                                                    onChange={e => handleChange(e)}\r\n                                                    name=\"customerName\" id=\"inputCustomerName\"\r\n                                                    placeholder=\"Enter Customer Name Here ...\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"inputCustomerAddress\" className=\"col-sm-2 control-label\">Business Address:</label>\r\n                                            <div className=\"col-sm-10\">\r\n                                                <textarea className=\"form-control\" name=\"address\"\r\n                                                    id=\"inputCustomerAddress\"\r\n                                                    value={inputs.address} onChange={e => handleChange(e)}\r\n                                                    placeholder=\"Enter Customer Address Here ...\">\r\n                                                </textarea>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"inputCreditLimit\" className=\"col-sm-2 control-label\">Credit Limit:</label>\r\n                                            <div className=\"col-sm-10\">\r\n                                                <input type=\"text\" className=\"form-control\"\r\n                                                    name=\"creditLimit\"\r\n                                                    value={inputs.creditLimit} onChange={e => handleChange(e)}\r\n                                                    id=\"inputCreditLimit\" placeholder=\"Enter Credit Limit Here ...\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"inputCustomerEmail\" className=\"col-sm-2 control-label\">Email Id:</label>\r\n                                            <div className=\"col-sm-10\">\r\n                                                <input type=\"text\" className=\"form-control\"\r\n                                                    value={inputs.email} onChange={e => handleChange(e)}\r\n                                                    name=\"email\" id=\"inputCustomerEmail\"\r\n                                                    placeholder=\"Enter Customer Email Here ...\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"inputCustomerPhone\" className=\"col-sm-2 control-label\">Phone Number:</label>\r\n                                            <div className=\"col-sm-10\">\r\n                                                <input type=\"text\" className=\"form-control\"\r\n                                                    value={inputs.phoneNumber} onChange={e => handleChange(e)}\r\n                                                    name=\"phoneNumber\" id=\"inputCustomerPhone\"\r\n                                                    placeholder=\"Enter Customer Phone Here ...\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"inputCustomerType\" className=\"col-sm-2 control-label\">Customer Type:</label>\r\n                                            <div className=\"col-sm-10\">\r\n                                                <input type=\"text\" className=\"form-control\"\r\n                                                    value={inputs.customerType} onChange={e => handleChange(e)}\r\n                                                    name=\"customerType\" id=\"inputCustomerType\"\r\n                                                    placeholder=\"Enter Customer Type Here ...\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"col-sm-offset-2 col-sm-10\">\r\n                                                <div className=\"checkbox\">\r\n                                                    <label>\r\n                                                        <input type=\"checkbox\"\r\n                                                            onChange={e => handleChange(e, \"activeStatus\", e.target.checked ? true : false)}\r\n                                                            value={inputs.activeStatus === true ? \"on\" : \"off\"}\r\n                                                            name=\"activeStatus\" /> Active Status\r\n                                                        </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"inputCustomerRemarks\" className=\"col-sm-2 control-label\">Customer Remarks:</label>\r\n                                            <div className=\"col-sm-10\">\r\n                                                <textarea className=\"form-control\"\r\n                                                    value={inputs.remakrs} onChange={e => handleChange(e)}\r\n                                                    name=\"remarks\" id=\"inputCustomerRemarks\"\r\n                                                    placeholder=\"Enter Customer Remarks Here ...\">\r\n                                                </textarea>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"col-sm-offset-2 col-sm-10\">\r\n                                                <input type=\"submit\" className=\"btn btn-default\" value=\"Save\" />\r\n                                                &nbsp;\r\n                                                <input type=\"reset\" value=\"Reset\" className=\"btn btn-danger\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {message !== \"\" && (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-10\">\r\n                                        <div className=\"well well-sm\">\r\n                                            <h6>{message}</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomerRegistrationForm;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useCollectFormDataAndValidate } from '../../hooks';\r\nimport { AuthenticationService } from '../../services';\r\nimport { Breadcrumb } from \"../breadcrumb\"\r\nimport SigninProps from './signin-props';\r\n\r\nconst DEFAULT_SIGNIN_DATA = {\r\n    userProfileId: \"\",\r\n    password: \"\"\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 3000;\r\nconst REDIRECT_TO_AFTER_SUCCESSFUL_AUTH = \"/\";\r\n\r\nconst Signin: React.FC<SigninProps> = props => {\r\n    const [formStatus, setFormStatus] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSignin = (validationStatus?: boolean) => {\r\n        setFormStatus(validationStatus || false);\r\n\r\n        if (validationStatus !== undefined && validationStatus === true) {\r\n            if (typeof props.authenticate === 'function') {\r\n                props.authenticate(inputs.userProfileId, inputs.password,\r\n                    () => {\r\n                        setTimeout(() => {\r\n                            if (props.authenticationStatus !== undefined &&\r\n                                props.authenticationStatus === true) {\r\n                                history.push(REDIRECT_TO_AFTER_SUCCESSFUL_AUTH);\r\n                            }\r\n                        }, DEFAULT_TIMEOUT);\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    const { handleSubmit, handleChange, inputs } =\r\n        useCollectFormDataAndValidate(DEFAULT_SIGNIN_DATA, handleSignin);\r\n\r\n    return (\r\n        <>\r\n            <header id=\"head\" className=\"secondary\"></header>\r\n\r\n            <div className=\"container\">\r\n                <Breadcrumb activeLink=\"User Access\" />\r\n\r\n                <div className=\"row\">\r\n\r\n                    <article className=\"col-xs-12 maincontent\">\r\n                        <header className=\"page-header\">\r\n                            <h1 className=\"page-title\">Sign in</h1>\r\n                        </header>\r\n\r\n                        <div className=\"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\">\r\n                            <div className=\"panel panel-default\">\r\n                                <div className=\"panel-body\">\r\n                                    <h3 className=\"thin text-center\">Sign in to your account</h3>\r\n                                    <p className=\"text-center text-muted\">Lorem ipsum dolor sit amet, <a href=\"signup.html\">Register</a> adipisicing elit. Quo nulla quibusdam cum doloremque incidunt nemo sunt a tenetur omnis odio. </p>\r\n\r\n                                    <hr />\r\n\r\n                                    <form onSubmit={e => handleSubmit(e)}>\r\n                                        <div className=\"top-margin\">\r\n                                            <label>Username/Email <span className=\"text-danger\">*</span></label>\r\n                                            <input type=\"text\" value={inputs.userProfileId} name=\"userProfileId\" onChange={e => handleChange(e)} className=\"form-control\" />\r\n                                        </div>\r\n\r\n                                        <div className=\"top-margin\">\r\n                                            <label>Password <span className=\"text-danger\">*</span></label>\r\n                                            <input type=\"password\" value={inputs.password} name=\"password\" onChange={e => handleChange(e)} className=\"form-control\" />\r\n                                        </div>\r\n\r\n                                        <hr />\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-8\">\r\n                                                <b><a href=\"/\">Forgot password?</a></b>\r\n                                            </div>\r\n                                            <div className=\"col-lg-4 text-right\">\r\n                                                <button className=\"btn btn-action\" type=\"submit\">Sign in</button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <hr />\r\n\r\n                                        {props.authenticationStatus !== undefined &&\r\n                                            props.authenticationStatus === true &&\r\n                                            props.authenticationError !== undefined && (\r\n                                                <p className=\"text-center text-muted\">\r\n                                                    Authentication Status: Sucessful\r\n                                                </p>\r\n                                            )\r\n                                        }\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </article>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        userProfile: state.userProfile,\r\n        authenticationStatus: state.authenticationStatus,\r\n        authenticationError: state.authenticationErrorOccurred\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        authenticate: (userProfileId: string, password: string, callback?: () => void) =>\r\n            dispatch(AuthenticationService.authenticate(userProfileId, password, callback))\r\n    };\r\n};\r\n\r\nconst ConnectedSignin = connect(mapStateToProps, mapDispatchToProps)(Signin);\r\n\r\nexport default ConnectedSignin;\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { Aboutus } from '../aboutus';\r\nimport { ContactUs } from '../contactus';\r\nimport { ConnectedCrmSystem } from '../crmsystem';\r\nimport { Footer } from \"../footer\";\r\nimport { Header } from \"../header\";\r\nimport { Home } from '../home';\r\nimport { CustomerRegistrationForm } from '../register-customer';\r\nimport { ConnectedSignin } from '../signin';\r\n\r\nconst Layout = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <Header />\r\n\r\n                <Switch>\r\n                    <Route path=\"/\" exact><Home title=\"AWESOME, CUSTOMIZABLE, REACT\" /></Route>\r\n\r\n                    <Route path=\"/about-us\">\r\n                        <Aboutus />\r\n                    </Route>\r\n\r\n                    <Route path=\"/contact-us\">\r\n                        <ContactUs />\r\n                    </Route>\r\n\r\n                    <Route path=\"/crm-system\">\r\n                        <ConnectedCrmSystem />\r\n                    </Route>\r\n\r\n                    <Route path=\"/sign-in\">\r\n                        <ConnectedSignin />\r\n                    </Route>\r\n\r\n                    <Route path=\"/new-customer\">\r\n                        <CustomerRegistrationForm />\r\n                    </Route>\r\n                </Switch>\r\n\r\n                < Footer />\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import { Provider } from \"react-redux\";\nimport { appStore } from \"../../store\";\nimport { Layout } from \"../layout\";\n\nconst App = () => {\n  return (\n    <Provider store={appStore}>\n      <Layout />\n    </Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}